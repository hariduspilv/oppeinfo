package ee.hois.xroad.ehis.generated;

import java.net.URL;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.14
 * 2019-12-09T12:12:35.462+02:00
 * Generated source version: 3.1.14
 * 
 */
@WebServiceClient(name = "ehisService", wsdlLocation = "/wsdl/ehis/ehis.wsdl", targetNamespace = "http://producers.ehis.xtee.riik.ee/producer/ehis")
@HandlerChain(file = "/handler/ehis/handler-chain.xml")
public class EhisService extends Service {

    private final static WebServiceException EHISSERVICE_EXCEPTION;
    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://producers.ehis.xtee.riik.ee/producer/ehis", "ehisService");
    public final static QName EhisPort = new QName("http://producers.ehis.xtee.riik.ee/producer/ehis", "ehisPort");
    static {
        WSDL_LOCATION = EhisService.class.getResource("/wsdl/ehis/ehis.wsdl");
        WebServiceException e = null;
        if (WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'ehis.wsdl' wsdl. Place the resource correctly in the classpath.");
            java.util.logging.Logger.getLogger(EhisService.class.getName()).log(java.util.logging.Level.INFO,
                    "Can not initialize the default wsdl from {0}", "ehis.wsdl");
        }
        EHISSERVICE_EXCEPTION = e;
    }

    public EhisService() {
        super(__getWsdlLocation(), SERVICE);
    }
    
    public EhisService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EhisService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }
    
    public EhisService(WebServiceFeature ... features) {
        super(__getWsdlLocation(), SERVICE, features);
    }

    public EhisService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public EhisService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns EhisPortType
     */
    @WebEndpoint(name = "ehisPort")
    public EhisPortType getEhisPort() {
        return super.getPort(EhisPort, EhisPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EhisPortType
     */
    @WebEndpoint(name = "ehisPort")
    public EhisPortType getEhisPort(WebServiceFeature... features) {
        return super.getPort(EhisPort, EhisPortType.class, features);
    }
    
    private static URL __getWsdlLocation() {
        if (EHISSERVICE_EXCEPTION != null) {
            throw EHISSERVICE_EXCEPTION;
        }
        return WSDL_LOCATION;
    }

}
