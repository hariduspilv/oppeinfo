package ee.hois.xroad.rahvastikuregister.generated;

import java.net.MalformedURLException;
import java.net.URL;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.14
 * 2019-04-03T13:37:51.697+03:00
 * Generated source version: 3.1.14
 * 
 */
@WebServiceClient(name = "XRoadService", 
                  wsdlLocation = "file:src/main/resources/wsdl/rahvastikuregister/rahvastikuregister.wsdl",
                  targetNamespace = "http://rr.x-road.eu/producer")
@HandlerChain(file="/handler/rahvastikuregister/handler-chain.xml")
public class XRoadService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://rr.x-road.eu/producer", "XRoadService");
    public final static QName MainPort = new QName("http://rr.x-road.eu/producer", "MainPort");
    static {
        URL url = null;
        try {
            url = new URL("file:src/main/resources/wsdl/rahvastikuregister/rahvastikuregister.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(XRoadService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:src/main/resources/wsdl/rahvastikuregister/rahvastikuregister.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public XRoadService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public XRoadService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public XRoadService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public XRoadService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public XRoadService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public XRoadService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns XRoadAdapterPortType
     */
    @WebEndpoint(name = "MainPort")
    public XRoadAdapterPortType getMainPort() {
        return super.getPort(MainPort, XRoadAdapterPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XRoadAdapterPortType
     */
    @WebEndpoint(name = "MainPort")
    public XRoadAdapterPortType getMainPort(WebServiceFeature... features) {
        return super.getPort(MainPort, XRoadAdapterPortType.class, features);
    }

}
