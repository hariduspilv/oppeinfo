package ee.hois.xroad.kutseregister.generated;

import java.net.MalformedURLException;
import java.net.URL;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.14
 * 2017-11-28T16:09:45.171+02:00
 * Generated source version: 3.1.14
 * 
 */
@WebServiceClient(name = "kutseregister", 
                  wsdlLocation = "file:src/main/resources/wsdl/kutseregister/kutseregister.wsdl",
                  targetNamespace = "http://producers.kutseregister.xtee.riik.ee/producer/kutseregister")
@HandlerChain(file="/handler/kutseregister/handler-chain.xml")
public class Kutseregister extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://producers.kutseregister.xtee.riik.ee/producer/kutseregister", "kutseregister");
    public final static QName Xteeport = new QName("http://producers.kutseregister.xtee.riik.ee/producer/kutseregister", "xteeport");
    static {
        URL url = null;
        try {
            url = new URL("file:src/main/resources/wsdl/kutseregister/kutseregister.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Kutseregister.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:src/main/resources/wsdl/kutseregister/kutseregister.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Kutseregister(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Kutseregister(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Kutseregister() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public Kutseregister(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Kutseregister(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Kutseregister(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns Xteeport
     */
    @WebEndpoint(name = "xteeport")
    public Xteeport getXteeport() {
        return super.getPort(Xteeport, Xteeport.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Xteeport
     */
    @WebEndpoint(name = "xteeport")
    public Xteeport getXteeport(WebServiceFeature... features) {
        return super.getPort(Xteeport, Xteeport.class, features);
    }

}
