package ee.hois.xroad.sais2.generated;

import java.net.URL;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.11
 * 2017-05-08T20:50:05.580+03:00
 * Generated source version: 3.1.11
 * 
 */
@WebServiceClient(name = "XRoad", 
                  targetNamespace = "http://sais2.x-road.ee/producer/") 
@HandlerChain(file="handler-chain.xml")
public class XRoad extends Service {


    public final static QName SERVICE = new QName("http://sais2.x-road.ee/producer/", "XRoad");
    public final static QName XRoadSoap = new QName("http://sais2.x-road.ee/producer/", "XRoadSoap");

    public XRoad(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public XRoad(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public XRoad(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public XRoad(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns XRoadSoap
     */
    @WebEndpoint(name = "XRoadSoap")
    public XRoadSoap getXRoadSoap() {
        return super.getPort(XRoadSoap, XRoadSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XRoadSoap
     */
    @WebEndpoint(name = "XRoadSoap")
    public XRoadSoap getXRoadSoap(WebServiceFeature... features) {
        return super.getPort(XRoadSoap, XRoadSoap.class, features);
    }

}
